{
  "openapi": "3.0.1",
  "info": {
    "title": "Идентификация на КПП",
    "description": "# _В основе лежит мой курсовой проект \uD83D\uDE0E_",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "paths": {
    "/employee-photo": {
      "get": {
        "tags": [
          "employee"
        ],
        "summary": "Получение фотографии своего профиля",
        "description": "Метод для получения фотографии своего профиля",
        "responses": {
          "200": {
            "description": "Фотография успешно получена",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "image/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Авторизация неуспешна",
            "content": {
              "image/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка получения фотографии",
            "content": {
              "image/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusInternalServerError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusInternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/healthcheck": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Проверка здоровья",
        "description": "Проверка на жизнеспособность",
        "responses": {
          "200": {
            "description": "Сервис жив",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Сервис мертв",
            "content": {}
          }
        }
      }
    },
    "/infocard-photos/{id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Получение элемента коллекции фотографий сотрудников",
        "description": "Метод для получения элемента коллекции фотографий сотрудников",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор информационной карточки",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Фотография сотрудника успешно получена",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "image/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Авторизация неуспешна",
            "content": {
              "image/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Карточка не найдена",
            "content": {
              "image/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка получения фотографии пользователя",
            "content": {
              "image/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusInternalServerError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusInternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/infocards": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Получение коллекции информационных карточек",
        "description": "Метод для получения коллекции информационных карточек",
        "parameters": [
          {
            "name": "pattern",
            "in": "query",
            "description": "Значение для фильтрации",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field",
            "in": "query",
            "description": "Поле для фильтрации и сортировки",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Направление сортировки",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о карточках успешно получена",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/admin.listFullInfoCardsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Авторизация неуспешна",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка получения карточек пользователей",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusInternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/infocards/{id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Получение элемента коллекции информационных карточек",
        "description": "Метод для получения элемента коллекции информационных карточек",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор информационной карточки",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о карточке успешно получена",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/admin.getFullInfoCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Авторизация неуспешна",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Карточка не найдена",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка получения карточки пользователя",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusInternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Подтверждение информационной карточки сотрудника",
        "description": "Метод для подтверждения информационной карточки сотрудника",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор информационной карточки",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о карточке успешно подтверждена",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Авторизация неуспешна",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Вход в аккаунт пользователя",
        "description": "Метод для входа в аккаунт пользователя",
        "requestBody": {
          "description": "Вход пользователя",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/http.loginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Пользователь успешно авторизовался",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Вход неуспешен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "loginRequest"
      }
    },
    "/passages": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Запись информации о проходе через КПП",
        "description": "Метод для записи о проходе через КПП",
        "requestBody": {
          "description": "Занесение информации о проходе через КПП",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/admin.createPassageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Данные успешно занесены",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Авторизация неуспешна",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Карточка не найдена",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка занесения информации о проходе через КПП",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusInternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "createPassageRequest"
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "employee"
        ],
        "summary": "Получение профиля",
        "description": "Метод для получения профиля",
        "responses": {
          "200": {
            "description": "Профиль успешно получен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/user.getProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Авторизация неуспешна",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Профиль не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка заполнения профиля",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusInternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "employee"
        ],
        "summary": "Заполнение профиля",
        "description": "Метод для заполнения профиля",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "image"
                ],
                "type": "object",
                "properties": {
                  "documentFields": {
                    "type": "string"
                  },
                  "documentType": {
                    "type": "string"
                  },
                  "serialNumber": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "description": "Заполнения профиля пользователя",
                    "format": "binary"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "image"
                ],
                "type": "object",
                "properties": {
                  "documentFields": {
                    "type": "string"
                  },
                  "documentType": {
                    "type": "string"
                  },
                  "serialNumber": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "description": "Заполнения профиля пользователя",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Профиль успешно создан",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Авторизация неуспешна",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка заполнения профиля",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusInternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Обновление токенов доступа",
        "description": "Метод для обновления токенов доступа пользователя",
        "requestBody": {
          "description": "Обновление токенов доступа",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/http.refreshTokensRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Токены успешно обновлены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.refreshTokensResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Вход неуспешен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusUnauthorized"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "refreshTokensRequest"
      }
    },
    "/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Регистрация пользователя",
        "description": "Метод для регистрации пользователя",
        "requestBody": {
          "description": "Регистрация пользователя",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/http.registerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Пользователь успешно зарегистрирован",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.registerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректное тело запроса",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusBadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка регистрации пользователя",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/http.StatusInternalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "registerRequest"
      }
    }
  },
  "components": {
    "schemas": {
      "admin.createPassageRequest": {
        "type": "object",
        "properties": {
          "documentType": {
            "type": "string"
          },
          "infoCardID": {
            "type": "integer"
          },
          "time": {
            "type": "string"
          }
        }
      },
      "admin.getFullInfoCardResponse": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/model.FullDocument"
          },
          "passages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.ShortPassage"
            }
          }
        }
      },
      "admin.listFullInfoCardsResponse": {
        "type": "object",
        "properties": {
          "infoCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.FullInfoCard"
            }
          }
        }
      },
      "http.StatusBadRequest": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Incorrect request body date of birth"
          }
        }
      },
      "http.StatusInternalServerError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Failed to register employee"
          }
        }
      },
      "http.StatusNotFound": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Failed to get info card document"
          }
        }
      },
      "http.StatusUnauthorized": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Cant login employee"
          }
        }
      },
      "http.loginRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "123"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+71234567890"
          }
        }
      },
      "http.loginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2IiwiaWF0IjoxNzI1NzE4NTc2fQ.RdcJHE8TULJKW-mVyn-0OBL_O_kmISrFNuK6E8FeRSs"
          },
          "isAdmin": {
            "type": "boolean",
            "format": "bool",
            "example": false
          },
          "refreshToken": {
            "type": "string",
            "example": "c8edc98acee4d6243add4e59f8fd46d6a7f150831d74f0feb3a10144cbe0c032"
          }
        }
      },
      "http.refreshTokensRequest": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2IiwiaWF0IjoxNzI1NzE4NTc2fQ.RdcJHE8TULJKW-mVyn-0OBL_O_kmISrFNuK6E8FeRSs"
          },
          "refreshToken": {
            "type": "string",
            "example": "c8edc98acee4d6243add4e59f8fd46d6a7f150831d74f0feb3a10144cbe0c032"
          }
        }
      },
      "http.refreshTokensResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2IiwiaWF0IjoxNzI1NzE4NTc2fQ.RdcJHE8TULJKW-mVyn-0OBL_O_kmISrFNuK6E8FeRSs"
          },
          "isAdmin": {
            "type": "boolean",
            "format": "bool",
            "example": false
          },
          "refreshToken": {
            "type": "string",
            "example": "c8edc98acee4d6243add4e59f8fd46d6a7f150831d74f0feb3a10144cbe0c032"
          }
        }
      },
      "http.registerRequest": {
        "type": "object",
        "properties": {
          "companyID": {
            "type": "integer",
            "example": 1
          },
          "dateOfBirth": {
            "type": "string",
            "example": "31.03.2004"
          },
          "name": {
            "type": "string",
            "example": "Степа"
          },
          "password": {
            "type": "string",
            "example": "123"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+71234567890"
          },
          "post": {
            "type": "string",
            "example": "Сотрудник"
          },
          "surname": {
            "type": "string",
            "example": "Степик"
          }
        }
      },
      "http.registerResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2IiwiaWF0IjoxNzI1NzE4NTc2fQ.RdcJHE8TULJKW-mVyn-0OBL_O_kmISrFNuK6E8FeRSs"
          },
          "isAdmin": {
            "type": "boolean",
            "format": "bool",
            "example": false
          },
          "refreshToken": {
            "type": "string",
            "example": "c8edc98acee4d6243add4e59f8fd46d6a7f150831d74f0feb3a10144cbe0c032"
          }
        }
      },
      "internal_model.DocumentData": {
        "type": "object",
        "properties": {
          "documentType": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          }
        }
      },
      "model.FullDocument": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/internal_model.DocumentData"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.KeyValueField"
            }
          }
        }
      },
      "model.FullInfoCard": {
        "type": "object",
        "properties": {
          "companyID": {
            "type": "integer"
          },
          "createdDate": {
            "type": "string"
          },
          "createdEmployeeID": {
            "type": "integer"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "isConfirmed": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string"
          },
          "post": {
            "type": "string"
          }
        }
      },
      "model.KeyValueField": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "model.ShortPassage": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "user.getProfileResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "documentFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.KeyValueField"
            }
          },
          "documentType": {
            "type": "string"
          },
          "isConfirmed": {
            "type": "boolean"
          },
          "serialNumber": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}